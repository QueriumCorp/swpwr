/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 FoxyFuka.glb -t 
*/

import * as THREE from "three";
import React, {
  useEffect,
  useRef,
  forwardRef,
  useImperativeHandle,
  useState,
} from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import type { GLTF } from "three-stdlib";
import type { AvatarAPIType } from "../contexts/AvatarAPI";
import { parseEmotes, useAvatarAPI } from "../contexts/AvatarAPI";

type GLTFResult = GLTF & {
  nodes: {
    Mesh002: THREE.SkinnedMesh;
    Mesh002_1: THREE.SkinnedMesh;
    Mesh018: THREE.SkinnedMesh;
    Mesh018_1: THREE.SkinnedMesh;
    jiemao_L: THREE.SkinnedMesh;
    jiemao_R: THREE.SkinnedMesh;
    kouzi: THREE.SkinnedMesh;
    meimao_L: THREE.SkinnedMesh;
    meimao_R: THREE.SkinnedMesh;
    nurbsToPoly1: THREE.SkinnedMesh;
    nurbsToPoly10: THREE.SkinnedMesh;
    nurbsToPoly11: THREE.SkinnedMesh;
    nurbsToPoly12: THREE.SkinnedMesh;
    nurbsToPoly2: THREE.SkinnedMesh;
    nurbsToPoly3: THREE.SkinnedMesh;
    nurbsToPoly4: THREE.SkinnedMesh;
    nurbsToPoly5: THREE.SkinnedMesh;
    nurbsToPoly6: THREE.SkinnedMesh;
    nurbsToPoly7: THREE.SkinnedMesh;
    nurbsToPoly8: THREE.SkinnedMesh;
    nurbsToPoly9: THREE.SkinnedMesh;
    qunzi: THREE.SkinnedMesh;
    tongue: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {
    yifu: THREE.MeshStandardMaterial;
    yifu_bian: THREE.MeshStandardMaterial;
    face: THREE.MeshStandardMaterial;
    lambert3: THREE.MeshStandardMaterial;
    hua: THREE.MeshStandardMaterial;
    meimao1: THREE.MeshStandardMaterial;
    shetou: THREE.MeshStandardMaterial;
    blinn4: THREE.MeshStandardMaterial;
    ya: THREE.MeshStandardMaterial;
    eye_cornea1: THREE.MeshStandardMaterial;
    eye_pupil1: THREE.MeshStandardMaterial;
    blinn2: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export type ActionName = "dance:01" | "idle:01" | "idle:02" | "idle:03";
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<
    JSX.IntrinsicElements["skinnedMesh"] | JSX.IntrinsicElements["bone"]
  >
>;

export type AvatarImperativeHandle = {
  emote: (emote: ActionName, repetitions?: number) => void;
  status: () => void;
};

const FoxyFuka = forwardRef(function FoxyFuka(props, ref) {
  const group = useRef<THREE.Group>(null);
  const gltf = useGLTF("./models/FoxyFuka.glb") as GLTFResult;
  const { nodes, materials, animations } = gltf;
  const { actions, names } = useAnimations(animations, group);

  const { setEmotes } = useAvatarAPI() as AvatarAPIType;

  useImperativeHandle(
    ref,
    () => {
      return {
        emote(emote: ActionName, repetitions = 1) {
          console.info("Emote:", emote);
          console.info("Repetitions:", repetitions);
          names.map((name) => {
            if (actions[name]?.isRunning() || actions[name]?.isScheduled())
              actions[name]?.fadeOut(0.5);
          });
          // actions["idle:01"]?.stop()
          actions[emote]
            ?.fadeIn(0.5)
            .setLoop(THREE.LoopRepeat, repetitions)
            .play();
          const delay = actions[emote]?.getClip().duration;
          actions["idle:01"]?.startAt(delay!).fadeIn(0.5).play();
        },
        status() {
          const actionStatus = names.map((name) => {
            return {
              name,
              isRunning: actions[name]?.isRunning(),
              isScheduled: actions[name]?.isScheduled(),
            };
          });
          console.table(actionStatus);
        },
      };
    },
    [],
  );

  // Publish available emotes
  useEffect(() => {
    setEmotes(parseEmotes(names));
    actions["dance:01"]?.reset().fadeIn(0.5).play();
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={1}>
          <primitive object={nodes.mixamorigHips} />
          <group name="duanxiu">
            <skinnedMesh
              castShadow
              name="Mesh002"
              geometry={nodes.Mesh002.geometry}
              material={materials.yifu}
              skeleton={nodes.Mesh002.skeleton}
            />
            <skinnedMesh
              castShadow
              name="Mesh002_1"
              geometry={nodes.Mesh002_1.geometry}
              material={materials.yifu_bian}
              skeleton={nodes.Mesh002_1.skeleton}
            />
          </group>
          <group name="head1">
            <skinnedMesh
              castShadow
              name="Mesh018"
              geometry={nodes.Mesh018.geometry}
              material={materials.face}
              skeleton={nodes.Mesh018.skeleton}
            />
            <skinnedMesh
              castShadow
              name="Mesh018_1"
              geometry={nodes.Mesh018_1.geometry}
              material={materials.yifu_bian}
              skeleton={nodes.Mesh018_1.skeleton}
            />
          </group>
          <skinnedMesh
            castShadow
            name="jiemao_L"
            geometry={nodes.jiemao_L.geometry}
            material={materials.lambert3}
            skeleton={nodes.jiemao_L.skeleton}
          />
          <skinnedMesh
            castShadow
            name="jiemao_R"
            geometry={nodes.jiemao_R.geometry}
            material={materials.lambert3}
            skeleton={nodes.jiemao_R.skeleton}
          />
          <skinnedMesh
            castShadow
            name="kouzi"
            geometry={nodes.kouzi.geometry}
            material={materials.hua}
            skeleton={nodes.kouzi.skeleton}
          />
          <skinnedMesh
            castShadow
            name="meimao_L"
            geometry={nodes.meimao_L.geometry}
            material={materials.meimao1}
            skeleton={nodes.meimao_L.skeleton}
          />
          <skinnedMesh
            castShadow
            name="meimao_R"
            geometry={nodes.meimao_R.geometry}
            material={materials.meimao1}
            skeleton={nodes.meimao_R.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly1"
            geometry={nodes.nurbsToPoly1.geometry}
            material={materials.shetou}
            skeleton={nodes.nurbsToPoly1.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly10"
            geometry={nodes.nurbsToPoly10.geometry}
            material={materials.blinn4}
            skeleton={nodes.nurbsToPoly10.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly11"
            geometry={nodes.nurbsToPoly11.geometry}
            material={materials.ya}
            skeleton={nodes.nurbsToPoly11.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly12"
            geometry={nodes.nurbsToPoly12.geometry}
            material={materials.ya}
            skeleton={nodes.nurbsToPoly12.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly2"
            geometry={nodes.nurbsToPoly2.geometry}
            material={materials.shetou}
            skeleton={nodes.nurbsToPoly2.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly3"
            geometry={nodes.nurbsToPoly3.geometry}
            material={materials.eye_cornea1}
            skeleton={nodes.nurbsToPoly3.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly4"
            geometry={nodes.nurbsToPoly4.geometry}
            material={materials.eye_pupil1}
            skeleton={nodes.nurbsToPoly4.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly5"
            geometry={nodes.nurbsToPoly5.geometry}
            material={materials.blinn2}
            skeleton={nodes.nurbsToPoly5.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly6"
            geometry={nodes.nurbsToPoly6.geometry}
            material={materials.blinn4}
            skeleton={nodes.nurbsToPoly6.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly7"
            geometry={nodes.nurbsToPoly7.geometry}
            material={materials.eye_cornea1}
            skeleton={nodes.nurbsToPoly7.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly8"
            geometry={nodes.nurbsToPoly8.geometry}
            material={materials.eye_pupil1}
            skeleton={nodes.nurbsToPoly8.skeleton}
          />
          <skinnedMesh
            castShadow
            name="nurbsToPoly9"
            geometry={nodes.nurbsToPoly9.geometry}
            material={materials.blinn2}
            skeleton={nodes.nurbsToPoly9.skeleton}
          />
          <skinnedMesh
            castShadow
            name="qunzi"
            geometry={nodes.qunzi.geometry}
            material={materials.yifu}
            skeleton={nodes.qunzi.skeleton}
          />
          <skinnedMesh
            castShadow
            name="tongue"
            geometry={nodes.tongue.geometry}
            material={materials.shetou}
            skeleton={nodes.tongue.skeleton}
          />
        </group>
      </group>
    </group>
  );
});

export default FoxyFuka;
useGLTF.preload("./models/FoxyFuka.glb");
